plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id "io.github.ladysnake.chenille" version "0.14.0"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

chenille {
    configurePublishing {
        withLadysnakeMaven()
        withGithubRelease()
        withModrinthRelease()
    }
}

repositories {
    mavenLocal()

    // Modrinth
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }

    // Mod Menu
    maven { url "https://maven.terraformersmc.com/releases/" }

    // Terrablender
    maven { url = 'https://maven.minecraftforge.net/' }
}

loom {
    accessWidenerPath = file("src/main/resources/mariposa.accesswidener")
}

fabricApi {
    configureDataGeneration() {
        client = true
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Libraries
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}